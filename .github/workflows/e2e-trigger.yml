name: e2e-trigger

on:
  issue_comment:
    types: [created]
  pull_request:
    types:
      - labeled
      - unlabeled
      - opened
      - synchronize
  push:
    branches:
      - master

env:
  RUN_COMMAND: /run-e2e
  SKIP_COMMAND: /skip-e2e
  SKIP_LABEL: e2e/skip
  CHECK_NAME: e2e

permissions:
  checks: write
  pull-requests: write
  actions: write

jobs:
  pull-request:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    name: Pull request evaluate
    steps:
      - uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23 # v2
        name: Enqueue e2e
        id: check
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event.pull_request.head.sha }}
          name: ${{ env.CHECK_NAME }}
          status: queued

      - uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23 # v2
        name: Skip e2e
        if: contains(github.event.pull_request.labels.*.name, env.SKIP_LABEL)
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event.pull_request.head.sha }}
          check_id: ${{ steps.check.outputs.check_id }}
          conclusion: success
          output: |
            {"summary": "skipped by maintainer"}

  comment:
    runs-on: ubuntu-latest
    if: github.event_name == 'issue_comment'
    name: Comment evaluate
    steps:
      - name: Determine if e2e should run
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        id: decision
        with:
          script: |
            core.setOutput('should_run', context.payload.comment?.body?.includes(process.env.RUN_COMMAND) === true)
            core.setOutput('should_skip', context.payload.comment?.body?.includes(process.env.SKIP_COMMAND) === true)

      - name: Add label to skip e2e test
        if: steps.decision.outputs.should_skip == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.payload.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["e2e/skip"]
            })

      - name: Retrieve pull request data
        if: steps.decision.outputs.should_run == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        id: pr_data
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.issue.number,
            })
            core.setOutput('ref', pr.head.ref)
            core.setOutput('commit_sha', pr.head.sha)

      - name: Retrieve check run id
        uses: actions/github-script@v7
        id: check
        with:
          script: |
            const response = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.steps.pr_data.outputs.commit_sha,
            });
            const check = response.data.check_runs.find(
              check => check.name === process.env.CHECK_NAME,
            );
            if (!check) {
              core.setFailed(`No check found with name "${checkName}" for SHA ${sha}`);
              return;
            }
            core.setOutput('check_id', check.id.toString());
            console.log(`Found check ID: ${check.id} for check "${checkName}"`);

      - name: Trigger e2e workflow
        if: steps.decision.outputs.should_run == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const result = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'e2e.yml',
              ref: context.steps.pr_data.outputs.ref,
              inputs: {
                debug: context.payload.comment?.body?.includes(`${process.env.RUN_COMMAND} debug`) === true,
                'debug-pr-number': `${context.payload.issue.number}`,
                'status-comment-id': `${context.payload.comment.id}`,
                'status-commit-sha': context.steps.pr_data.outputs.commit_sha,
                'status-check-id': context.steps.check.outputs.check_id,
              },
            })

  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    name: Push evaluate
    steps:
      - uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23 # v2
        name: Enqueue e2e
        id: check
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.context.sha }}
          name: ${{ env.CHECK_NAME }}
          status: queued

      - name: Trigger e2e workflow
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const result = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'e2e.yml',
              ref: context.ref,
              inputs: {
                'status-commit-sha': context.sha,
                'status-check-id': context.steps.check.outputs.check_id,
              },
            })
